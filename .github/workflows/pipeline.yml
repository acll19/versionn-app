name: ci

on:
  push:
    branches:
      - main
jobs:
  BuildAndPublish:
      concurrency: ci-${{ github.ref }}
      env:
        DOCKER_IMAGE_NAME: acll19/version-app # this could be anything
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v2
        
        - name: Create Image Tag
          run: |
            commit_count=$(git rev-list --count HEAD)
            commit_sha=$(git rev-parse --short HEAD)
          env:
            IMAGE_TAG: "${{ commit_count }}-${{ commit_sha }}"

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: |
              ${{ env.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  ApplyInfra:
    needs: BuildAndPublish
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create Image Tag
        run: |
          commit_count=$(git rev-list --count HEAD)
          commit_sha=$(git rev-parse --short HEAD)
        env:
          IMAGE_TAG: "${{ commit_count }}-${{ commit_sha }}"

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
        run: terraform init -input=false -no-color

      - name: Terraform validation
        run: terraform validate

      - name: Terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
        run: terraform apply -auto-approve -input=false -var "app_image_name=${{ env.IMAGE_TAG }}"